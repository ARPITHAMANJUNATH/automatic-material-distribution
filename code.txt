

#include <LiquidCrystal.h>
#include <Keypad.h>
#include <Servo.h>
//#include <SoftwareSerial.h>
 
//SIM800 TX is connected to Arduino D8
#define SIM800_TX_PIN 8
 
//SIM800 RX is connected to Arduino D7
#define SIM800_RX_PIN 7
 
//Create software serial object to communicate with SIM800
//SoftwareSerial serialSIM800(SIM800_TX_PIN,SIM800_RX_PIN);
 

Servo myservo;  // create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;    // variable to store the servo position

int pump=22;



boolean flag=false;
  int card1=1563101;
  int password1=8998;
  int card2=1563102;
  int password2=9998;
  int card3=1563121;
  int password3=8888;
  int card4=1600367;
  int password4=9999;
  int a;
 int j=0;
int i=0;
char key;
const byte ROWS = 4; // Four rows
const byte COLS = 4; // Three columns
// Define the Keymap
char keys[ROWS][COLS] = {
  {'0','4','8','C'},
  {'1','5','9', 'D'},
  {'2','6','A','E'},
  {'3','7','B','F'}
};
// Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte rowPins[ROWS] = { 39, 41, 43, 45 };
// Connect keypad COL0, COL1 and COL2 to these Arduino pins.
byte colPins[COLS] = { 31, 33, 35,37 }; 

// Create the Keypad
Keypad keypd = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

#define ledpin 13
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

String inputString = "";      
String inputString2 = ""; 
String inputString1= "";
// a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete
boolean stringComplete2 = false;
void setup() {
 pinMode(24, OUTPUT);
pinMode(pump,OUTPUT);

myservo.attach(9);


 Serial.begin(9600);
  while(!Serial2);
   
  //Being serial communication witj Arduino and SIM800
  Serial2.begin(9600);
  delay(500);

  
  // initialize serial:
 lcd.begin(20,4);
 lcd.clear();
   
  // Print a message to the LCD.
 
  lcd.print("scan your card");

 delay(2000);
  Serial.begin(9600);
   Serial1.begin(9600);
   Serial3.begin(9600);
    
   
  // reserve 200 bytes for the inputString:
  inputString.reserve(200);
inputString1.reserve(4);
  inputString2.reserve(20);
 
}

void loop() {
 


  // print the string when a newline arrives:

 
  if (stringComplete) {
     lcd.setCursor(0, 0);
    Serial.println(inputString);
     Serial.println(inputString.toInt());

     
     if((inputString.toInt())==1563101)
     {    
      lcd.clear();
          Serial.println("arpitha");
           lcd.setCursor(0,0);
  lcd.print("arpitha");
      Serial.println("Card type - BPL");
       lcd.setCursor(0,1);
      lcd.print(" Card type - BPL");
      delay(1000);
 lcd.setCursor(0,2);
      lcd.print("Enter ur pin: ");

      inputString=" ";

       Serial.println("aaaaaaaaaaaaa");
     }

else if((inputString.toInt())==1563102)
     {    
      lcd.clear();
          Serial.println("janet");
           lcd.setCursor(0,0);
  lcd.print("Janet");
      Serial.println("Card type - BPL");
       lcd.setCursor(0,1);
      lcd.print(" Card type - BPL");
      delay(1000);
 lcd.setCursor(0,2);
      lcd.print("Enter ur pin: ");

      inputString=" ";

       Serial.println("bbbbbbbbbbbb");
     }
     else if((inputString.toInt())==1563121)
     {    
      lcd.clear();
          Serial.println("chaithra");
           lcd.setCursor(0,0);
  lcd.print("chaithra");
      Serial.println("Card type - BPL");
       lcd.setCursor(0,1);
      lcd.print(" Card type - BPL");
      delay(1000);
 lcd.setCursor(0,2);
      lcd.print("Enter ur pin: ");

      inputString=" ";

       Serial.println("cccccccccccc");
     }
     else if((inputString.toInt())==1563124)
     {    
      lcd.clear();
          Serial.println("bhavana");
           lcd.setCursor(0,0);
  lcd.print("bhavana");
      Serial.println("Card type - BPL");
       lcd.setCursor(0,1);
      lcd.print(" Card type - BPL");
      delay(1000);
 lcd.setCursor(0,2);
      lcd.print("Enter ur pin: ");

      inputString=" ";

       Serial.println("ddddddddd");
     }


      key=keypd.getKey();
                   

  if(key)
  {
     // Serial.println(key);  
     char inChar1 =key;

    if(key)
     if (i<=3)

     {
    // add it to the inputString:
    inputString1 += inChar1;
    
  
         lcd.setCursor(i,3);
         lcd.print(key);
        delay(1000);
        lcd.setCursor(i,3);
        lcd.print('*');
        
        key=0;
        i++;
     }
     
 a=inputString1.toInt();

       }
Serial.println(a);

if(i==4)

    if(a==8998)
{
  
Serial.println("Dispatch Ration");
lcd.println("Dispatch Ration");
 lcd.clear();
delay(2000);

   // pos =30;
   // myservo.write(pos);              
   // tell servo to go to position in variable 'pos'
   // delay(5000);
   // waits 15ms for the servo to reach the position
     
  delay(5000);
Serial.println("dispatching rice");
lcd.println("Dispatching Rice");
for (pos = 90; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30); 
 }
 delay(5000);

    for (pos = 0; pos <= 90; pos += 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30); 
    
    // waits 15ms for the servo to reach the position
  }
 if (stringComplete2) 
 {
  Serial.println(inputString2);
  stringComplete2=false;
 }
Serial.println(Serial3.read());
lcd.print(Serial3.read());
lcd.clear();
   
 
 


  delay(2000);
  lcd.clear();
lcd.print("Dispatching Kerocene");
delay(2000);

lcd.clear();

delay(1000);
 digitalWrite(24, HIGH);
 delay(2000);
 digitalWrite(24,LOW);

 
digitalWrite(pump, HIGH);
 delay(2000);
digitalWrite(pump,LOW);


 Serial.println("Setup Complete!");
  Serial.println("Sending SMS...");
   
  //Set SMS format to ASCII
  Serial2.write("AT+CMGF=1\r\n");
  delay(500);
 
  //Send new SMS command and message number
  Serial2.write("AT+CMGS=\"9449383813\"\r\n");
  // Serial1.write("AT+CMGS=\"9620610095\"\r\n");
  delay(500);
   
  //Send SMS content
   Serial2.write("ration received ");
  delay(500);
   
  //Send Ctrl+Z / ESC to denote SMS message is complete
  Serial2.write((char)26);
  delay(1000);
     
  Serial.println("SMS Sent!");

   a=0;
   flag=true;
  }
 else if(a==9998)
{
  lcd.clear();
Serial.println("Dispatch Ration");
lcd.print("Dispatch Ration");
delay(5000);
Serial.println("dispatching rice");
 if (stringComplete2) {
  Serial.println(inputString2);
  stringComplete2=false;
 }
 Serial.println(Serial3.read());
lcd.clear();
lcd.print("Dispatching Rice");

delay(2000);

for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30);                       // waits 15ms for the servo to reach the position
  }
    delay(5000);
  
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30); 
    
    // waits 15ms for the servo to reach the position
  }

  delay(2000);
  lcd.clear();
lcd.print("Dispatching Kerocene");

 digitalWrite(24, HIGH);
 delay(8000);
digitalWrite(24,LOW);


    Serial.println("Setup Complete!");
  Serial.println("Sending SMS...");
   
  //Set SMS format to ASCII
  Serial2.write("AT+CMGF=1\r\n");
  delay(500);
 
  //Send new SMS command and message number
  Serial2.write("AT+CMGS=\"9449383813\"\r\n");
  // Serial1.write("AT+CMGS=\"9620610095\"\r\n");
  delay(500);
   
  //Send SMS content
  Serial2.write("ration received");
  delay(500);
   
  //Send Ctrl+Z / ESC to denote SMS message is complete
  Serial2.write((char)26);
  delay(1000);
     
  Serial.println("SMS Sent!");
  flag=true;
   a=0;
   
  }
 else if(a==8888)
{
  lcd.clear();
Serial.println("Dispatch Ration");
lcd.print("Dispatch Ration");
delay(5000);
Serial.println("dispatching rice");
 if (stringComplete2) {
  Serial.println(inputString2);
  stringComplete2=false;
 }
 Serial.println(Serial3.read());
lcd.clear();
lcd.print("Dispatching Rice");
delay(2000);

for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30);                       // waits 15ms for the servo to reach the position
  }
    delay(5000);
  
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30); 
    
    // waits 15ms for the servo to reach the position
  }

  delay(2000);
  lcd.clear();
lcd.print("Dispatching Kerocene");

 digitalWrite(24, HIGH);
 delay(2000);
digitalWrite(24,LOW);



    Serial.println("Setup Complete!");
  Serial.println("Sending SMS...");
   
  //Set SMS format to ASCII
  Serial2.write("AT+CMGF=1\r\n");
  delay(500);
 
  //Send new SMS command and message number
  Serial2.write("AT+CMGS=\"9449383813\"\r\n");
  // Serial1.write("AT+CMGS=\"9620610095\"\r\n");
  delay(500);
   
  //Send SMS content
  Serial2.write("ration received");
  delay(500);
   
  //Send Ctrl+Z / ESC to denote SMS message is complete
  Serial2.write((char)26);
  delay(1000);
     
  Serial.println("SMS Sent!");
  flag=true;
   a=0;
  }
 else if(a==9999)
{
  lcd.clear();
Serial.println("Dispatch Ration");
lcd.print("Dispatch Ration");
delay(5000);
Serial.println("dispatching rice");

 if (stringComplete2) {
  Serial.println(inputString2);
  stringComplete2=false;
 }
 Serial.println(Serial3.read());
lcd.clear();
lcd.print("Dispatching Rice");
delay(2000);

for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30);                       // waits 15ms for the servo to reach the position
  }
    delay(5000);
  
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30); 
    
    // waits 15ms for the servo to reach the position
  }

  delay(2000);
  lcd.clear();
lcd.print("Dispatching Kerocene");

 digitalWrite(24, HIGH);
 delay(10000);
digitalWrite(24,LOW);


 Serial.println("Setup Complete!");
  Serial.println("Sending SMS...");
   
  //Set SMS format to ASCII
  Serial2.write("AT+CMGF=1\r\n");
  delay(500);
 
  //Send new SMS command and message number
  Serial2.write("AT+CMGS=\"9449383813\"\r\n");
  // Serial1.write("AT+CMGS=\"9620610095\"\r\n");
  delay(500);
   
  //Send SMS content
  Serial2.write("ration received");
  delay(500);
   
  //Send Ctrl+Z / ESC to denote SMS message is complete
  Serial2.write((char)26);
  delay(1000);
     
  Serial.println("SMS Sent!");
  flag=true;
   a=0;

   
  }

  else 
  {

if(flag==false)
{

    Serial.println("Incorrect Password");
    lcd.setCursor(0,3);
    lcd.print("incorrect password");
    
     i=0;
}
  }

      


  
  
   
   

  
  }
   
  
}


/*
  SerialEvent occurs whenever a new data comes in the
 hardware serial RX.  This routine is run between each
 time loop() runs, so using delay inside loop can delay
 response.  Multiple bytes of data may be available.
 */
void serialEvent1()
{
  while (Serial1.available()) {
    // get the new byte:
    char inChar = (char)Serial1.read();
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag
    // so the main loop can do something about it:
    if (inChar == '\n') {
      stringComplete = true;
    }
  }
}

void serialEvent3()
{
  while (Serial3.available()) {
    // get the new byte:
    char inChar = (char)Serial3.read();
    // add it to the inputString:
    inputString2 += inChar;
    // if the incoming character is a newline, set a flag
    // so the main loop can do something about it:
    if (inChar == '\n') {
      stringComplete2 = true;
    }
  }
}

